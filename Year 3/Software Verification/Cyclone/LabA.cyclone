graph LabA
{
    abstract start node S {}
    abstract node A{}
    abstract node B{}
    abstract node C{}
    abstract node D{}
    abstract node E{}
    abstract node F{}
    abstract node G{}
    abstract node H{}
    abstract node I{}
    abstract node J{}

    edge{S -> +}
    edge{A <-> B, C, F}
    edge{B <-> D, G}
    edge{C <-> H, E}
    edge{D <-> E, I}
    edge{E <-> J}
    edge{F <-> I, J}
    edge{G <-> H, J}
    edge{H <-> I}

    // Hamiltonian Cycle
    // goal {
    //     check for 11 condition (
    //         (<<(A) && >>1(A) && A^{2} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(B) && >>1(B) && A^{1} && B^{2} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(C) && >>1(C) && A^{1} && B^{1} && C^{2} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(D) && >>1(D) && A^{1} && B^{1} && C^{1} && D^{2} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(E) && >>1(E) && A^{1} && B^{1} && C^{1} && D^{1} && E^{2} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(F) && >>1(F) && A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{2} && G^{1} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(G) && >>1(G) && A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{2} && H^{1} && I^{1} && J^{1}) ||
    //         (<<(H) && >>1(H) && A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{2} && I^{1} && J^{1}) ||
    //         (<<(I) && >>1(I) && A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{2} && J^{1}) ||
    //         (<<(J) && >>1(J) && A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{2})
    //     )   
    //     reach (A,B,C,D,E,F,G,H,I,J)
    // }

    // Hamiltonian Path
    goal {
        check for 10 condition (
            A^{1} && B^{1} && C^{1} && D^{1} && E^{1} && F^{1} && G^{1} && H^{1} && I^{1} && J^{1}
        )
        reach (A,B,C,E,F,G,H,I,J)
    }

}